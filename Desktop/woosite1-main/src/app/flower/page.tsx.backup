"use client"

import { useState, useEffect, useMemo } from 'react';
import { useRouter } from 'next/navigation';
import Image from 'next/image';
import { ShoppingCart, Filter, X, ChevronDown, Star, Check } from 'lucide-react';
import { useCart } from '../context/CartContext';
import { FLOWER_PRODUCTS, WEIGHT_PRICING, type FilterState, type FeaturedProduct } from './constants';
import { getProductPrice, filterProducts } from './utils';
import Link from 'next/link';
import TrustSliderItem from '@/app/components/TrustSliderItem';
import CarouselContainer from '@/app/components/CarouselContainer';
import Section from '@/app/components/Section';
import SectionHeader from '@/app/components/SectionHeader';
import ReviewCard from '@/app/components/ReviewCard';
import ExperiencePanel from '@/app/components/ExperiencePanel';

// Filter options
const FILTER_OPTIONS = {
  category: [
    { value: 'indica', label: 'Indica', color: 'bg-purple-500/20 text-purple-300' },
    { value: 'sativa', label: 'Sativa', color: 'bg-green-500/20 text-green-300' },
    { value: 'hybrid', label: 'Hybrid', color: 'bg-yellow-500/20 text-yellow-300' }
  ],
  vibe: [
    { value: 'relax', label: 'Relax', icon: 'üò¥' },
    { value: 'energize', label: 'Energize', icon: '‚ö°' },
    { value: 'balance', label: 'Balance', icon: '‚öñÔ∏è' }
  ],
  nose: [
    { value: 'candy', label: 'Candy' },
    { value: 'gas', label: 'Gas' },
    { value: 'cake', label: 'Cake' },
    { value: 'funk', label: 'Funk' },
    { value: 'sherb', label: 'Sherb' }
  ],
  thc: [
    { value: '20-25', label: '20-25%' },
    { value: '25-30', label: '25-30%' },
    { value: '30+', label: '30%+' }
  ]
};

// Sort options
const SORT_OPTIONS = [
  { value: 'featured', label: 'Featured' },
  { value: 'price-low', label: 'Price: Low to High' },
  { value: 'price-high', label: 'Price: High to Low' },
  { value: 'thc-high', label: 'THC: High to Low' },
  { value: 'name', label: 'Name: A-Z' }
];

// Flower-specific trust slider items data
const flowerTrustSliderItems = [
  { 
    title: "Indoor or it Doesn't Make the Menu", 
    description: "We don't stock outdoor. Ever.",
    accent: "emerald-400",
    topLineClass: "bg-emerald-400",
    bottomLineClass: "bg-emerald-400/60",
    gradientClass: "via-emerald-400/40",
    hoverClass: "from-emerald-400/5"
  },
  { 
    title: "White Ash or It's Out", 
    description: "Burns clean. No harsh hits. No excuses.",
    accent: "purple-400",
    topLineClass: "bg-purple-400",
    bottomLineClass: "bg-purple-400/60",
    gradientClass: "via-purple-400/40",
    hoverClass: "from-purple-400/5"
  },
  { 
    title: "No Infused Gimmicks", 
    description: "No sprayed-on terps. No fake potency.",
    accent: "amber-400",
    topLineClass: "bg-amber-400",
    bottomLineClass: "bg-amber-400/60",
    gradientClass: "via-amber-400/40",
    hoverClass: "from-amber-400/5"
  },
  { 
    title: "We Smoke Everything First", 
    description: "If it didn't pass us, you'll never see it.",
    accent: "blue-400",
    topLineClass: "bg-blue-400",
    bottomLineClass: "bg-blue-400/60",
    gradientClass: "via-blue-400/40",
    hoverClass: "from-blue-400/5"
  },
  { 
    title: "New Drops, Nonstop", 
    description: "Rotating fire weekly‚Äîbecause old weed doesn't belong in a bag.",
    accent: "rose-400",
    topLineClass: "bg-rose-400",
    bottomLineClass: "bg-rose-400/60",
    gradientClass: "via-rose-400/40",
    hoverClass: "from-rose-400/5"
  },
  { 
    title: "Verified Genetics Only", 
    description: "No rebrands. No renames. No lies on the label.",
    accent: "teal-400",
    topLineClass: "bg-teal-400",
    bottomLineClass: "bg-teal-400/60",
    gradientClass: "via-teal-400/40",
    hoverClass: "from-teal-400/5"
  }
];

// Flower-specific reviews data
const flowerReviews = [
  {
    name: "Marcus T.",
    location: "Charlotte, NC",
    rating: 5,
    date: "2 days ago",
    review: "ZOTE is absolutely fire. 29.5% THCa and you can feel every percent. Dense nugs, perfect cure, white ash. This is what premium flower should be.",
    verified: true,
    product: "ZOTE"
  },
  {
    name: "Sarah K.",
    location: "Raleigh, NC",
    rating: 5,
    date: "1 week ago",
    review: "The Blizzard strain exceeded my expectations. Clean, energizing effects and the candy nose profile is amazing. Fast delivery too!",
    verified: true,
    product: "Blizzard"
  },
  {
    name: "James D.",
    location: "Elizabethton, TN",
    rating: 5,
    date: "3 days ago",
    review: "Gary Poppins is my new favorite. 28.44% THC and it shows. Perfect balance of effects and the customer service was excellent.",
    verified: true,
    product: "Gary Poppins"
  },
  {
    name: "Ashley R.",
    location: "Boone, NC",
    rating: 5,
    date: "5 days ago",
    review: "Cobb Stopper is perfect for evening relaxation. The cake and sherb nose is incredible and the effects are exactly as described.",
    verified: true,
    product: "Cobb Stopper"
  },
  {
    name: "Mike L.",
    location: "Greensboro, NC",
    rating: 5,
    date: "1 day ago",
    review: "Amazing quality across the board. The packaging is premium and discrete. Will definitely become a regular customer.",
    verified: true,
    product: "Strawberry Cream"
  },
  {
    name: "Destiny W.",
    location: "Durham, NC",
    rating: 5,
    date: "4 days ago",
    review: "First time ordering and blown away by the quality. The trim is perfect, no stems, just pure flower. Shipping was lightning fast.",
    verified: true,
    product: "Electric Lemon"
  },
  {
    name: "Tony B.",
    location: "Atlanta, GA",
    rating: 5,
    date: "6 days ago",
    review: "Been smoking for 20 years and this is top shelf quality. The cure is perfect, burns white ash every time. Will be back for more.",
    verified: true,
    product: "Purple Punch"
  },
  {
    name: "Emma C.",
    location: "Nashville, TN",
    rating: 5,
    date: "1 week ago",
    review: "Love the variety and the detailed strain information. Helps me pick exactly what I need for different times of day. Great service!",
    verified: true,
    product: "Gelato #33"
  },
  {
    name: "Carlos M.",
    location: "Asheville, NC",
    rating: 5,
    date: "3 days ago",
    review: "The Strawberry Cream is insane. 27.8% THC and tastes exactly like the name suggests. Perfect for unwinding after work.",
    verified: true,
    product: "Strawberry Cream"
  },
  {
    name: "Jessica L.",
    location: "Winston-Salem, NC",
    rating: 5,
    date: "2 weeks ago",
    review: "Electric Lemon gives me the perfect morning energy boost. Clean, focused high without any anxiety. Highly recommend!",
    verified: true,
    product: "Electric Lemon"
  },
  {
    name: "David R.",
    location: "Hickory, NC",
    rating: 5,
    date: "1 week ago",
    review: "Purple Punch knocked me out in the best way. Perfect for insomnia and the grape flavor is incredible. 10/10 would order again.",
    verified: true,
    product: "Purple Punch"
  },
  {
    name: "Amanda S.",
    location: "Gastonia, NC",
    rating: 5,
    date: "5 days ago",
    review: "Gelato #33 is my go-to hybrid. Perfect balance of relaxation and euphoria. The packaging arrived in perfect condition.",
    verified: true,
    product: "Gelato #33"
  },
  {
    name: "Kevin W.",
    location: "Concord, NC",
    rating: 5,
    date: "4 days ago",
    review: "ZOTE hits different. The nose on this strain is incredible and the effects are exactly what I needed. Premium quality.",
    verified: true,
    product: "ZOTE"
  },
  {
    name: "Rachel P.",
    location: "Huntersville, NC",
    rating: 5,
    date: "1 week ago",
    review: "Blizzard is perfect for creative sessions. Clean sativa effects with amazing candy flavor. Shipping was super fast too!",
    verified: true,
    product: "Blizzard"
  },
  {
    name: "Brandon K.",
    location: "Kannapolis, NC",
    rating: 5,
    date: "6 days ago",
    review: "Gary Poppins exceeded all expectations. Dense, sticky buds with incredible potency. This is what premium flower should be.",
    verified: true,
    product: "Gary Poppins"
  },
  {
    name: "Melissa T.",
    location: "Statesville, NC",
    rating: 5,
    date: "3 days ago",
    review: "Cobb Stopper is my new nighttime strain. Perfect for relaxation and the flavor profile is amazing. Will definitely reorder.",
    verified: true,
    product: "Cobb Stopper"
  },
  {
    name: "Tyler J.",
    location: "Cornelius, NC",
    rating: 5,
    date: "2 days ago",
    review: "The quality is unmatched. Every strain I've tried has been perfectly cured and incredibly potent. Customer for life!",
    verified: true,
    product: "Strawberry Cream"
  },
  {
    name: "Nicole B.",
    location: "Davidson, NC",
    rating: 5,
    date: "1 week ago",
    review: "Electric Lemon is my morning go-to. Clean energy without the jitters. Perfect for daytime use. Love it!",
    verified: true,
    product: "Electric Lemon"
  },
  {
    name: "Chris H.",
    location: "Mint Hill, NC",
    rating: 5,
    date: "4 days ago",
    review: "Purple Punch is incredible for sleep. The grape flavor is spot on and the effects are exactly what I needed. Perfect cure.",
    verified: true,
    product: "Purple Punch"
  },
  {
    name: "Stephanie G.",
    location: "Matthews, NC",
    rating: 5,
    date: "5 days ago",
    review: "Gelato #33 is the perfect hybrid. Great for any time of day and the flavor is incredible. Fast shipping and great packaging.",
    verified: true,
    product: "Gelato #33"
  },
  {
    name: "Jordan L.",
    location: "Indian Trail, NC",
    rating: 5,
    date: "2 weeks ago",
    review: "ZOTE is absolutely insane. 29.5% THC and you can feel every bit of it. Dense, sticky, and burns perfect white ash.",
    verified: true,
    product: "ZOTE"
  },
  {
    name: "Brittany M.",
    location: "Waxhaw, NC",
    rating: 5,
    date: "1 week ago",
    review: "Blizzard gives me the perfect creative boost. Clean sativa effects with amazing candy nose. Fast shipping and perfect packaging.",
    verified: true,
    product: "Blizzard"
  },
  {
    name: "Austin R.",
    location: "Monroe, NC",
    rating: 5,
    date: "6 days ago",
    review: "Gary Poppins is top shelf quality. Perfect cure, incredible potency, and amazing flavor. This is what premium looks like.",
    verified: true,
    product: "Gary Poppins"
  },
  {
    name: "Kayla D.",
    location: "Pineville, NC",
    rating: 5,
    date: "3 days ago",
    review: "Cobb Stopper is perfect for winding down. The cake and sherb flavors are incredible and the effects are exactly right.",
    verified: true,
    product: "Cobb Stopper"
  },
  {
    name: "Ryan S.",
    location: "Fort Mill, SC",
    rating: 5,
    date: "4 days ago",
    review: "Strawberry Cream tastes exactly like strawberries and cream. 27.8% THC hits perfect and the cure is absolutely flawless.",
    verified: true,
    product: "Strawberry Cream"
  },
  {
    name: "Samantha W.",
    location: "Rock Hill, SC",
    rating: 5,
    date: "1 week ago",
    review: "Electric Lemon is my productivity strain. Clean, focused energy without any crash. Perfect for daytime use. Love it!",
    verified: true,
    product: "Electric Lemon"
  },
  {
    name: "Jake P.",
    location: "York, SC",
    rating: 5,
    date: "5 days ago",
    review: "Purple Punch knocked me out in the best way. Perfect for insomnia and the grape flavor is absolutely incredible.",
    verified: true,
    product: "Purple Punch"
  },
  {
    name: "Lauren K.",
    location: "Clover, SC",
    rating: 5,
    date: "2 days ago",
    review: "Gelato #33 is the perfect all-day strain. Great balance of effects and the flavor is out of this world. Highly recommend!",
    verified: true,
    product: "Gelato #33"
  },
  {
    name: "Mason T.",
    location: "Tega Cay, SC",
    rating: 5,
    date: "1 week ago",
    review: "ZOTE is absolutely fire. The nose hits you immediately and the effects are incredibly potent. This is premium flower.",
    verified: true,
    product: "ZOTE"
  },
  {
    name: "Alexis H.",
    location: "Lake Wylie, SC",
    rating: 5,
    date: "6 days ago",
    review: "Blizzard is perfect for creative work. Clean sativa effects with amazing candy nose. Fast shipping and perfect packaging.",
    verified: true,
    product: "Blizzard"
  }
];

// Style constants for carousel
const carouselStyle = {
  boxShadow: '0 -2px 4px rgba(0, 0, 0, 0.06), 0 2px 4px rgba(0, 0, 0, 0.06)',
  scrollBehavior: 'smooth' as const,
  backgroundImage: `linear-gradient(rgba(255, 255, 255, 0.03) 1px, transparent 1px), linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px)`,
  backgroundSize: '50px 50px'
};

const carouselEnhancedStyle = {
  ...carouselStyle,
  backdropFilter: 'blur(1px) saturate(120%)',
  WebkitBackdropFilter: 'blur(1px) saturate(120%)'
};

export default function FlowerCollectionPage() {
  const router = useRouter();
  const { addToCart } = useCart();
  
  // State
  const [filters, setFilters] = useState<FilterState>({ category: [], vibe: [], nose: [] });
  const [selectedWeights, setSelectedWeights] = useState<Record<number, string>>({});
  const [sortBy, setSortBy] = useState('featured');
  const [hoveredProduct, setHoveredProduct] = useState<number | null>(null);
  const [loadedImages, setLoadedImages] = useState<Set<number>>(new Set());
  const [quickViewProduct, setQuickViewProduct] = useState<FeaturedProduct | null>(null);

  // Filter and sort products
  const filteredAndSortedProducts = useMemo(() => {
    let products = filterProducts(FLOWER_PRODUCTS, filters);
    
    // Sort products
    switch (sortBy) {
      case 'price-low':
        products.sort((a, b) => a.price - b.price);
        break;
      case 'price-high':
        products.sort((a, b) => b.price - a.price);
        break;
      case 'thc-high':
        products.sort((a, b) => b.thc - a.thc);
        break;
      case 'name':
        products.sort((a, b) => a.title.localeCompare(b.title));
        break;
      default:
        // Featured first
        products.sort((a, b) => (b.featured ? 1 : 0) - (a.featured ? 1 : 0));
    }
    
    return products;
  }, [filters, sortBy]);

  // Handle filter change
  const handleFilterChange = (filterType: keyof FilterState, value: string) => {
    setFilters(prev => ({
      ...prev,
      [filterType]: prev[filterType].includes(value)
        ? prev[filterType].filter(v => v !== value)
        : [...prev[filterType], value]
    }));
  };

  // Handle weight selection
  const handleWeightSelect = (productId: number, weight: string) => {
    setSelectedWeights(prev => ({ ...prev, [productId]: weight }));
  };

  // Handle add to cart
  const handleAddToCart = (product: FeaturedProduct, e: React.MouseEvent) => {
    e.stopPropagation();
    const weight = selectedWeights[product.id] || '3.5g';
    const price = WEIGHT_PRICING[weight as keyof typeof WEIGHT_PRICING];
    
    addToCart({
      id: product.id,
      title: product.title,
      price: price,
      weight: weight,
      image: product.image
    }, 1);
  };

  // Handle quick view
  const handleQuickView = (product: FeaturedProduct, e: React.MouseEvent) => {
    e.stopPropagation();
    setQuickViewProduct(product);
  };

  // Handle product click
  const handleProductClick = (product: FeaturedProduct) => {
    const handle = product.title.toLowerCase().replace(/\s+/g, '-');
    router.push(`/product/${handle}`);
  };

  // Handle image load
  const handleImageLoad = (productId: number) => {
    setLoadedImages(prev => new Set([...prev, productId]));
  };

  // Active filter count
  const activeFilterCount = Object.values(filters).flat().length;

  return (
    <div className="min-h-screen bg-[#4a4a4a] text-white">
      {/* Hero Section */}
      <section className="relative py-16 px-6 overflow-hidden">
        {/* Grid Background */}
        <div className="absolute inset-0 opacity-25">
          <div 
            className="w-full h-full"
            style={{
              backgroundImage: `
                linear-gradient(rgba(255, 255, 255, 0.2) 1px, transparent 1px),
                linear-gradient(90deg, rgba(255, 255, 255, 0.2) 1px, transparent 1px)
              `,
              backgroundSize: '50px 50px'
            }}
          />
        </div>
        
        <div className="absolute inset-0 opacity-20">
          <div className="absolute top-1/4 left-1/4 w-96 h-96 bg-gradient-to-br from-emerald-500/30 to-emerald-600/30 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute bottom-1/4 right-1/4 w-72 h-72 bg-gradient-to-br from-green-500/30 to-emerald-500/30 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '2s' }}></div>
        </div>
        
        <div className="relative z-10 max-w-7xl mx-auto text-center">
          <h1 className="text-5xl md:text-7xl font-extralight tracking-wide mb-4 opacity-0 animate-[fadeInUp_1s_ease-out_0.3s_forwards]">
            FLOWER.
          </h1>
          <p className="text-xl md:text-2xl text-white/80 font-light mb-8 opacity-0 animate-[fadeInUp_1s_ease-out_0.5s_forwards]">
            Straight to your door. Fresh. Loud. Ready.
          </p>
          
          {/* Stats */}
          <div className="flex flex-wrap justify-center gap-8 mb-8 opacity-0 animate-[fadeInUp_1s_ease-out_0.7s_forwards]">
            <div className="text-center">
              <div className="text-3xl font-light text-emerald-400">20-30%</div>
              <div className="text-sm text-white/70">THCa Content</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-light text-emerald-400">4.9‚òÖ</div>
              <div className="text-sm text-white/70">Average Rating</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-light text-emerald-400">1,800+</div>
              <div className="text-sm text-white/70">Reviews</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-light text-emerald-400">Same Day</div>
              <div className="text-sm text-white/70">Shipping</div>
            </div>
          </div>
          
          {/* Trust badges */}
          <div className="flex flex-wrap justify-center gap-4 opacity-0 animate-[fadeInUp_1s_ease-out_0.9s_forwards]">
            <div className="flex items-center gap-2 px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full">
              <Check className="w-4 h-4 text-emerald-400" />
              <span className="text-sm">Indoor Only</span>
            </div>
            <div className="flex items-center gap-2 px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full">
              <Check className="w-4 h-4 text-emerald-400" />
              <span className="text-sm">White Ash</span>
            </div>
            <div className="flex items-center gap-2 px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full">
              <Check className="w-4 h-4 text-emerald-400" />
              <span className="text-sm">Strong Nose</span>
            </div>
            <div className="flex items-center gap-2 px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full">
              <Check className="w-4 h-4 text-emerald-400" />
              <span className="text-sm">Soft Texture</span>
            </div>
            <div className="flex items-center gap-2 px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full">
              <Check className="w-4 h-4 text-emerald-400" />
              <span className="text-sm">Farm Fresh</span>
            </div>
          </div>
        </div>

        {/* Delivery Location - Bottom Left */}
        <div className="absolute bottom-3 left-6 z-10 opacity-0 animate-[fadeInUp_1s_ease-out_1.1s_forwards]">
          <div className="flex items-center gap-2 px-3 py-2">
            <svg className="w-3 h-3 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
            <div className="flex items-center gap-1">
              <span className="text-white/70 text-xs">Delivering to </span>
              <span className="text-white font-medium text-xs">Mooresville 28117</span>
              <button className="text-blue-400 hover:text-blue-300 text-xs font-medium transition-colors duration-300 flex items-center gap-1 ml-1">
                Change
                <svg className="w-2 h-2 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                </svg>
              </button>
            </div>
          </div>
        </div>
      </section>

      {/* Filter Bar */}
      <section className="sticky top-0 z-40 bg-[#4a4a4a]/95 backdrop-blur-md border-y border-white/10">
        <div className="max-w-7xl mx-auto px-6 py-4">
          <div className="flex items-center justify-between gap-4">
            {/* Results count */}
            <div className="text-sm text-white/70">
              {filteredAndSortedProducts.length} products
              {activeFilterCount > 0 && ` ‚Ä¢ ${activeFilterCount} filters applied`}
            </div>
            
            {/* Desktop filters and sort */}
            <div className="hidden md:flex items-center gap-4">
              {/* Filter buttons */}
              <div className="flex items-center gap-2">
                <button
                  onClick={() => {
                    // Trigger header nav filter dropdown
                    const event = new CustomEvent('toggleMobileFilters');
                    window.dispatchEvent(event);
                  }}
                  className="flex items-center gap-2 px-4 py-2 bg-white/10 hover:bg-white/20 rounded-lg transition-all duration-300"
                >
                  <Filter className="w-4 h-4" />
                  <span>Filter</span>
                  {activeFilterCount > 0 && (
                    <span className="px-2 py-0.5 bg-emerald-500 text-black text-xs rounded-full font-medium">
                      {activeFilterCount}
                    </span>
                  )}
                </button>
                
                {activeFilterCount > 0 && (
                  <button
                    onClick={() => setFilters({ category: [], vibe: [], nose: [] })}
                    className="text-sm text-white/70 hover:text-white transition-colors duration-300"
                  >
                    Clear all
                  </button>
                )}
              </div>
              
              {/* Sort dropdown */}
              <div className="relative">
                <select
                  value={sortBy}
                  onChange={(e) => setSortBy(e.target.value)}
                  className="appearance-none px-4 py-2 pr-10 bg-white/10 hover:bg-white/20 rounded-lg transition-all duration-300 cursor-pointer focus:outline-none focus:ring-2 focus:ring-emerald-500"
                >
                  {SORT_OPTIONS.map(option => (
                    <option key={option.value} value={option.value} className="bg-[#2a2a2a]">
                      {option.label}
                    </option>
                  ))}
                </select>
                <ChevronDown className="absolute right-3 top-1/2 -translate-y-1/2 w-4 h-4 pointer-events-none" />
              </div>
            </div>
            
            {/* Mobile filter button */}
            <button
              onClick={() => {
                // Trigger header nav filter dropdown
                const event = new CustomEvent('toggleMobileFilters');
                window.dispatchEvent(event);
              }}
              className="md:hidden flex items-center gap-2 px-4 py-2 bg-white/10 hover:bg-white/20 rounded-lg transition-all duration-300"
            >
              <Filter className="w-4 h-4" />
              <span>Filter</span>
              {activeFilterCount > 0 && (
                <span className="px-2 py-0.5 bg-emerald-500 text-black text-xs rounded-full font-medium">
                  {activeFilterCount}
                </span>
              )}
            </button>
          </div>
        </div>
      </section>

      {/* Product Grid */}
      <section className="relative bg-[#4a4a4a] overflow-hidden -mt-px" style={{ 
        boxShadow: 'inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 4px 6px rgba(0, 0, 0, 0.07)'
      }}>
        <div className="absolute inset-0 opacity-15">
          <div className="absolute top-1/4 left-1/4 w-48 h-48 bg-gradient-to-br from-emerald-500/20 to-emerald-600/20 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute bottom-1/4 right-1/4 w-36 h-36 bg-gradient-to-br from-green-500/20 to-emerald-500/20 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '2s' }}></div>
        </div>
        
        <div className="w-full relative z-10 py-8">
          {/* Product Grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-1">
            {filteredAndSortedProducts.map((product, index) => {
              const selectedWeight = selectedWeights[product.id] || '3.5g';
              const price = WEIGHT_PRICING[selectedWeight as keyof typeof WEIGHT_PRICING];
              const isImageLoaded = loadedImages.has(product.id);

              return (
                <div 
                  key={product.id} 
                  className={`group relative cursor-pointer transition-all duration-700 ${
                    index < 12 ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'
                  }`}
                  style={{ transitionDelay: `${index * 50}ms` }}
                  onClick={() => handleProductClick(product)}
                  onMouseEnter={() => setHoveredProduct(product.id)}
                  onMouseLeave={() => setHoveredProduct(null)}
                >
                  <div className="bg-gradient-to-br from-white/8 to-white/4 hover:from-white/12 hover:to-white/8 backdrop-blur-sm border border-white/10 hover:border-white/20 transition-all duration-500 p-4 pb-0 md:p-6 md:pb-0 h-full group-hover:shadow-2xl">
                    
                    {/* Quick view button */}
                    <button
                      onClick={(e) => handleQuickView(product, e)}
                      className="absolute top-2 right-2 z-10 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-x-2 group-hover:translate-x-0"
                    >
                      <div className="w-8 h-8 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center">
                        <svg className="w-4 h-4 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                        </svg>
                      </div>
                    </button>

                    {/* Product Image with lazy loading */}
                    <div className="relative aspect-square mb-4 md:mb-6 overflow-hidden rounded-lg bg-white/5">
                      {!isImageLoaded && (
                        <div className="absolute inset-0 bg-gradient-to-br from-white/10 to-white/5 animate-pulse">
                          <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent animate-shimmer"></div>
                        </div>
                      )}
                      
                      <Image
                        src={product.image}
                        alt={product.title}
                        fill
                        className={`object-cover transition-all duration-700 group-hover:scale-110 ${
                          isImageLoaded ? 'opacity-100' : 'opacity-0'
                        }`}
                        sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, (max-width: 1280px) 33vw, 25vw"
                        loading="lazy"
                        onLoad={() => handleImageLoad(product.id)}
                        quality={85}
                      />
                      
                      {/* Image overlay on hover */}
                      <div className="absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    </div>

                    {/* Product Info */}
                    <div className="space-y-3 md:space-y-4">
                      {/* Category & Title */}
                      <div>
                        <div className="flex items-center gap-2 mb-2">
                          <span className={`px-2 py-1 rounded-full text-xs font-light tracking-wide ${
                            product.category === 'indica' ? 'bg-purple-500/20 text-purple-300' :
                            product.category === 'sativa' ? 'bg-green-500/20 text-green-300' :
                            'bg-yellow-500/20 text-yellow-300'
                          }`}>
                            {product.category}
                          </span>
                          <span className="text-white/60 text-xs">{product.thc}% THCa</span>
                          <span className="text-white/50 text-xs font-light opacity-0 group-hover:opacity-100 transition-opacity duration-300">Contains .3%&gt; Œî9 THC</span>
                        </div>
                        
                        <h3 className="text-white/95 font-light text-3xl md:text-lg mb-2 group-hover:text-white transition-colors duration-300 line-clamp-2">
                          {product.title}
                          {product.lineage && (
                            <span className="text-white/60 text-xs font-light capitalize ml-2">({product.lineage})</span>
                          )}
                        </h3>
                        
                        <p className="text-white/70 text-sm leading-relaxed line-clamp-2 group-hover:text-white/80 transition-colors duration-300">
                          {product.description}
                        </p>
                      </div>

                      {/* Effects */}
                      <div className="space-y-2">
                        <div className="flex flex-wrap gap-1">
                          <span className="text-xs text-white/80 font-medium mr-1">Effects:</span>
                          {product.vibe === 'relax' && (
                            <>
                              <span className="px-2 py-0.5 bg-purple-500/20 text-purple-300 rounded-full text-xs hover:bg-purple-500/30 transition-colors duration-300">relaxed</span>
                              <span className="px-2 py-0.5 bg-indigo-500/20 text-indigo-300 rounded-full text-xs hover:bg-indigo-500/30 transition-colors duration-300">sleepy</span>
                              <span className="px-2 py-0.5 bg-blue-500/20 text-blue-300 rounded-full text-xs hover:bg-blue-500/30 transition-colors duration-300">calm</span>
                            </>
                          )}
                          {product.vibe === 'energize' && (
                            <>
                              <span className="px-2 py-0.5 bg-green-500/20 text-green-300 rounded-full text-xs hover:bg-green-500/30 transition-colors duration-300">energetic</span>
                              <span className="px-2 py-0.5 bg-yellow-500/20 text-yellow-300 rounded-full text-xs hover:bg-yellow-500/30 transition-colors duration-300">focused</span>
                              <span className="px-2 py-0.5 bg-orange-500/20 text-orange-300 rounded-full text-xs hover:bg-orange-500/30 transition-colors duration-300">creative</span>
                            </>
                          )}
                          {product.vibe === 'balance' && (
                            <>
                              <span className="px-2 py-0.5 bg-emerald-500/20 text-emerald-300 rounded-full text-xs hover:bg-emerald-500/30 transition-colors duration-300">balanced</span>
                              <span className="px-2 py-0.5 bg-teal-500/20 text-teal-300 rounded-full text-xs hover:bg-teal-500/30 transition-colors duration-300">euphoric</span>
                              <span className="px-2 py-0.5 bg-cyan-500/20 text-cyan-300 rounded-full text-xs hover:bg-cyan-500/30 transition-colors duration-300">uplifted</span>
                            </>
                          )}
                        </div>
                        
                        {/* Terpenes */}
                        {product.terpenes && product.terpenes.length > 0 && (
                          <div className="flex flex-wrap gap-1">
                            <span className="text-xs text-white/80 font-medium mr-1">Terpenes:</span>
                            {product.terpenes.map((terpene, idx) => (
                              <span key={idx} className="px-2 py-0.5 bg-blue-500/20 text-blue-300 rounded-full text-xs hover:bg-blue-500/30 transition-colors duration-300">
                                {terpene}
                              </span>
                            ))}
                          </div>
                        )}
                        
                        {/* Nose Profile */}
                        <div className="flex flex-wrap gap-1">
                          <span className="text-xs text-white/80 font-medium mr-1">Nose:</span>
                          {product.nose.map((note, idx) => (
                            <span key={idx} className="px-2 py-1 bg-white/10 rounded-full text-xs text-white/80 hover:bg-white/15 transition-colors duration-300">
                              {note}
                            </span>
                          ))}
                        </div>
                        
                        {/* Weight Selection */}
                        <div className="text-center mb-2">
                          <span className="text-white/70 text-xs font-light">Select weight</span>
                        </div>
                        <div className="grid grid-cols-5 gap-1">
                          {Object.entries(WEIGHT_PRICING).map(([weight, weightPrice]) => (
                            <button
                              key={weight}
                              onClick={(e) => {
                                e.stopPropagation();
                                handleWeightSelect(product.id, weight);
                              }}
                              className={`px-2 py-1 rounded text-xs font-light transition-all duration-300 hover:scale-105 active:scale-95 ${
                                selectedWeight === weight
                                  ? 'bg-white/20 text-white border border-white/30'
                                  : 'bg-white/5 text-white/70 hover:bg-white/10 hover:text-white/90'
                              }`}
                            >
                              {weight}
                            </button>
                          ))}
                        </div>
                      </div>

                      {/* Price & Actions */}
                      <div className="flex items-center justify-between pt-2 pb-4 border-t border-white/10">
                        <div className="text-white/95 font-light text-xl group-hover:text-white transition-colors duration-300">
                          ${price}
                          <span className="text-sm text-white/60 ml-1">/{selectedWeight}</span>
                        </div>
                        
                        <div className="flex gap-2 flex-shrink-0">
                          <button
                            onClick={(e) => handleAddToCart(product, e)}
                            className="px-6 py-3 md:px-3 md:py-1.5 bg-white/10 hover:bg-white/20 border border-white/20 hover:border-white/40 rounded-lg text-base md:text-xs text-white font-light transition-all duration-300 hover:scale-105 active:scale-95 whitespace-nowrap focus:outline-none focus:ring-0 select-none"
                          >
                            Add to Cart
                          </button>
                          <button
                            onClick={(e) => {
                              e.stopPropagation();
                              // Buy now logic here
                            }}
                            className="px-6 py-3 md:px-3 md:py-1.5 bg-black hover:bg-gray-900 border border-white/30 hover:border-white/50 rounded-lg text-base md:text-xs text-white font-medium transition-all duration-300 hover:scale-105 active:scale-95 flex items-center justify-center gap-1 whitespace-nowrap focus:outline-none focus:ring-0 select-none"
                          >
                            Buy with
                            <svg className="w-5 h-5 md:w-3 md:h-3 flex-shrink-0" viewBox="0 0 24 24" fill="currentColor">
                              <path d="M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09z"/>
                              <path d="M15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701z"/>
                            </svg>
                            Pay
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </div>
        
        {/* Empty state */}
        {filteredAndSortedProducts.length === 0 && (
          <div className="text-center py-16 px-6">
            <p className="text-white/70 text-lg mb-4">No products match your filters</p>
            <button
              onClick={() => setFilters({ category: [], vibe: [], nose: [] })}
              className="px-6 py-3 bg-white/10 hover:bg-white/20 rounded-lg transition-all duration-300"
            >
              Clear all filters
            </button>
          </div>
        )}
      </section>

      {/* Flower Subscription Section */}
      <section className="relative py-12 bg-[#3a3a3a] overflow-hidden">
        {/* Background elements */}
        <div className="absolute inset-0 opacity-15">
          <div className="absolute top-1/4 left-1/6 w-32 h-32 bg-gradient-to-br from-green-500/40 to-emerald-500/40 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute bottom-1/4 right-1/6 w-24 h-24 bg-gradient-to-br from-purple-500/40 to-pink-500/40 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '2s' }}></div>
        </div>
        
        <div className="w-full relative z-10">
          {/* Section Header */}
          <div className="text-center mb-8 px-4 opacity-0 animate-[fadeInUp_1s_ease-out_0.3s_forwards]">
            <h2 className="text-3xl md:text-4xl font-extralight tracking-wide mb-2">
              Never Run Out.
            </h2>
            <p className="text-lg text-white/70 font-light">
              Monthly flower drops. Hand-picked. Delivered fresh.
            </p>
          </div>

          {/* Subscription Plans Grid - Matching Product Card Style */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-1 mb-8 opacity-0 animate-[fadeInUp_1s_ease-out_0.5s_forwards]">
            {/* Drop Club */}
            <div className="bg-gradient-to-br from-white/8 to-white/4 hover:from-white/12 hover:to-white/8 backdrop-blur-sm border border-white/10 hover:border-white/20 transition-all duration-500 p-4 pb-0 md:p-6 md:pb-0 h-full group-hover:shadow-2xl group cursor-pointer flex flex-col">
              {/* Plan Header */}
              <div className="text-center mb-4">
                <h3 className="text-white font-light text-lg mb-1">üåø Drop Club</h3>
                <p className="text-white/60 text-xs mb-2">Monthly Flower Rotation</p>
                <div className="text-xl font-light text-white mb-1">$95/mo</div>
                <div className="inline-flex items-center gap-1 px-2 py-0.5 bg-green-500/20 text-green-300 rounded-full text-xs font-medium">
                  üí∏ Save $15
                </div>
              </div>
              
              {/* Contents */}
              <div className="mb-3 space-y-1 flex-grow">
                <div className="text-white/80 text-xs">‚Ä¢ 4 √ó 3.5g Flower Jars (14g total)</div>
                <div className="text-white/80 text-xs">‚Ä¢ 4 unique exotic strains</div>
                <div className="text-white/80 text-xs">‚Ä¢ Free shipping + 10% off site</div>
              </div>
              
              {/* CTA Button */}
              <div className="pb-4 border-t border-white/10 pt-2 mt-auto">
                <Link href="/subscriptions" className="w-full py-1.5 px-3 bg-black hover:bg-gray-900 border border-white/30 hover:border-white/50 rounded-lg text-xs text-white font-medium transition-all duration-300 hover:scale-105 text-center block focus:outline-none focus:ring-0 select-none">
                  Subscribe Now
                </Link>
              </div>
            </div>

            {/* Real Flower Club */}
            <div className="bg-gradient-to-br from-white/8 to-white/4 hover:from-white/12 hover:to-white/8 backdrop-blur-sm border border-white/10 hover:border-white/20 transition-all duration-500 p-4 pb-0 md:p-6 md:pb-0 h-full group-hover:shadow-2xl group cursor-pointer relative flex flex-col">
              {/* Popular Badge */}
              <div className="absolute -top-2 left-1/2 transform -translate-x-1/2">
                <span className="bg-white text-black px-2 py-0.5 rounded-full text-xs font-light uppercase tracking-wide">
                  Popular
                </span>
              </div>
              
              {/* Plan Header */}
              <div className="text-center mb-4">
                <h3 className="text-white font-light text-lg mb-1">üå≤ Real Flower Club</h3>
                <p className="text-white/60 text-xs mb-2">Ounce-Tier Subscription</p>
                <div className="text-xl font-light text-white mb-1">$180/mo</div>
                <div className="inline-flex items-center gap-1 px-2 py-0.5 bg-green-500/20 text-green-300 rounded-full text-xs font-medium">
                  üí∏ Save $20
                </div>
              </div>
              
              {/* Contents */}
              <div className="mb-3 space-y-1 flex-grow">
                <div className="text-white/80 text-xs">‚Ä¢ 4 √ó 7g Flower Jars (28g total)</div>
                <div className="text-white/80 text-xs">‚Ä¢ 4 premium exotic strains</div>
                <div className="text-white/80 text-xs">‚Ä¢ Free shipping + 10% off site</div>
              </div>
              
              {/* CTA Button */}
              <div className="pb-4 border-t border-white/10 pt-2 mt-auto">
                <Link href="/subscriptions" className="w-full py-1.5 px-3 bg-black hover:bg-gray-900 border border-white/30 hover:border-white/50 rounded-lg text-xs text-white font-medium transition-all duration-300 hover:scale-105 text-center block focus:outline-none focus:ring-0 select-none">
                  Subscribe Now
                </Link>
              </div>
            </div>

            {/* Full-Spectrum Bundle */}
            <div className="bg-gradient-to-br from-white/8 to-white/4 hover:from-white/12 hover:to-white/8 backdrop-blur-sm border border-white/10 hover:border-white/20 transition-all duration-500 p-4 pb-0 md:p-6 md:pb-0 h-full group-hover:shadow-2xl group cursor-pointer flex flex-col">
              {/* Plan Header */}
              <div className="text-center mb-4">
                <h3 className="text-white font-light text-lg mb-1">üß™ Full-Spectrum</h3>
                <p className="text-white/60 text-xs mb-2">Mixed Category Subscription</p>
                <div className="text-xl font-light text-white mb-1">$185/mo</div>
                <div className="inline-flex items-center gap-1 px-2 py-0.5 bg-green-500/20 text-green-300 rounded-full text-xs font-medium">
                  üí∏ Save $55
                </div>
              </div>
              
              {/* Contents */}
              <div className="mb-3 space-y-1 flex-grow">
                <div className="text-white/80 text-xs">‚Ä¢ 4 √ó 3.5g Flower + 2 √ó Vapes + 2 √ó Edibles</div>
                <div className="text-white/80 text-xs">‚Ä¢ Everything box - all categories</div>
                <div className="text-white/80 text-xs">‚Ä¢ Free shipping + 10% off site</div>
              </div>
              
              {/* CTA Button */}
              <div className="pb-4 border-t border-white/10 pt-2 mt-auto">
                <Link href="/subscriptions" className="w-full py-1.5 px-3 bg-black hover:bg-gray-900 border border-white/30 hover:border-white/50 rounded-lg text-xs text-white font-medium transition-all duration-300 hover:scale-105 text-center block focus:outline-none focus:ring-0 select-none">
                  Subscribe Now
                </Link>
              </div>
            </div>

            {/* Benefits Card */}
            <div className="bg-gradient-to-br from-white/8 to-white/4 hover:from-white/12 hover:to-white/8 backdrop-blur-sm border border-white/10 hover:border-white/20 transition-all duration-500 p-4 pb-0 md:p-6 md:pb-0 h-full group-hover:shadow-2xl group cursor-pointer flex flex-col">
              {/* Benefits Header */}
              <div className="text-center mb-4">
                <h3 className="text-white font-light text-lg mb-1">üè∑Ô∏è Sitewide Discounts</h3>
                <p className="text-white/60 text-xs mb-2">Active subscriber pricing</p>
                <div className="text-xl font-light text-white mb-1">10%</div>
                <div className="text-green-300 text-xs font-medium mb-2">OFF EVERYTHING</div>
              </div>
              
              {/* Benefits List */}
              <div className="mb-3 space-y-1 flex-grow">
                <div className="text-white/80 text-xs">‚Ä¢ üåø Flower ‚Ä¢ üîã Vapes ‚Ä¢ üç¨ Edibles</div>
                <div className="text-white/80 text-xs">‚Ä¢ No minimum order. No exclusions.</div>
                <div className="text-white/80 text-xs">‚Ä¢ üéÅ Surprise bonus items</div>
                <div className="text-white/80 text-xs">‚Ä¢ üöö Free shipping always</div>
              </div>
              
              {/* CTA Button */}
              <div className="pb-4 border-t border-white/10 pt-2 mt-auto">
                <Link href="/subscriptions" className="w-full py-1.5 px-3 bg-black hover:bg-gray-900 border border-white/30 hover:border-white/50 rounded-lg text-xs text-white font-medium transition-all duration-300 hover:scale-105 text-center block focus:outline-none focus:ring-0 select-none">
                  Choose Any Plan Above
                </Link>
              </div>
            </div>
          </div>

          {/* Bottom CTA */}
          <div className="text-center px-4 opacity-0 animate-[fadeInUp_1s_ease-out_0.7s_forwards]">
            <p className="text-white/70 text-sm mb-3">
              You're not buying a box. You're getting access to the cycle that keeps you stocked.
            </p>
            <Link 
              href="/subscriptions"
              className="inline-flex items-center gap-2 px-6 py-2 bg-white/10 hover:bg-white/20 border border-white/20 hover:border-white/40 text-white rounded-lg font-light text-sm transition-all duration-300 hover:scale-105 focus:outline-none focus:ring-0 select-none"
            >
              View All Plans
              <svg className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
              </svg>
            </Link>
          </div>
        </div>
      </section>

      {/* Reviews Section Header */}
      <Section id="flower-reviews-section">
        <div className="relative z-10 py-3 w-full">
          <SectionHeader 
            title="Real Customers. Real Reviews."
            subtitle="See what people are saying about our flower"
            delay="0.3s"
          />
        </div>
      </Section>

      {/* Reviews Carousel */}
      <Section id="reviews-section">
        <div className="w-full relative z-10">
          <div className={`w-full py-0 transition-all duration-1000 opacity-100 translate-y-0`}>
            <CarouselContainer 
              style={carouselStyle}
              arrowIdPrefix="flower-reviews"
            >
              {/* Rating Header */}
              <div className="flex-none w-screen md:w-1/3 lg:w-1/4 snap-center relative group">
                <div className="h-full bg-gradient-to-br from-white/8 to-white/3 hover:from-white/12 hover:to-white/6 backdrop-blur-sm border-r border-white/5 hover:border-white/10 flex flex-col items-center justify-center p-6 md:p-8 transition-all duration-500">
                  <div className="text-center">
                    <div className="text-4xl md:text-5xl lg:text-6xl font-thin text-white tracking-wide mb-3 group-hover:scale-105 transition-transform duration-300">4.9</div>
                    <div className="flex justify-center items-center gap-1 mb-3">
                      {[...Array(5)].map((_, i) => (
                        <svg key={i} className="w-5 md:w-6 h-5 md:h-6 text-yellow-400 fill-current hover:scale-110 transition-transform duration-200" viewBox="0 0 24 24" style={{ animationDelay: `${i * 0.1}s` }}>
                          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                        </svg>
                      ))}
                    </div>
                    <p className="text-white/70 text-base font-light mb-2 group-hover:text-white/80 transition-colors duration-300">1,800+ flower reviews</p>
                    <p className="text-white/50 text-sm group-hover:text-white/60 transition-colors duration-300">Premium quality.<br />Every time.</p>
                  </div>
                </div>
              </div>

              {flowerReviews.map((review, index) => (
                <ReviewCard
                  key={index}
                  name={review.name}
                  location={review.location}
                  rating={review.rating}
                  date={review.date}
                  review={review.review}
                  verified={review.verified}
                  product={review.product}
                />
              ))}

              {/* Write a Review CTA Card */}
              <div className="flex-none w-screen md:w-1/3 lg:w-1/4 snap-center relative group">
                <div className="h-full bg-gradient-to-br from-yellow-500/10 to-orange-500/5 hover:from-yellow-500/15 hover:to-orange-500/10 backdrop-blur-sm border-r border-yellow-500/20 hover:border-yellow-500/30 flex flex-col items-center justify-center p-6 md:p-8 transition-all duration-500">
                  <div className="text-center">
                    {/* Star Icon */}
                    <div className="w-16 h-16 bg-gradient-to-r from-yellow-500 to-orange-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">
                      <svg className="w-8 h-8 text-black" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
                      </svg>
                    </div>
                    
                    <h3 className="text-xl font-light text-white mb-2 group-hover:text-white transition-colors duration-300">
                      Share Your Experience
                    </h3>
                    <p className="text-white/70 text-sm mb-4 group-hover:text-white/80 transition-colors duration-300">
                      Tried our flower? Help others find their perfect strain.
                    </p>
                    
                    {/* CTA Button */}
                    <button className="group/btn px-6 py-3 bg-gradient-to-r from-yellow-500 to-orange-500 hover:from-yellow-400 hover:to-orange-400 text-black font-medium rounded-lg transition-all duration-300 hover:scale-105 active:scale-95 flex items-center gap-2 mx-auto shadow-lg hover:shadow-xl">
                      <svg className="w-4 h-4 group-hover/btn:rotate-12 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                      </svg>
                      Write Review
                    </button>
                    
                    {/* Benefits */}
                    <div className="mt-4 space-y-1">
                      <p className="text-yellow-400 text-xs font-medium">‚ú® Earn rewards</p>
                      <p className="text-white/60 text-xs">Only verified purchases</p>
                    </div>
                  </div>
                </div>
              </div>
            </CarouselContainer>
          </div>
        </div>
      </Section>

      {/* Write a Review CTA Section */}
      <Section className="relative bg-[#3a3a3a] overflow-hidden -mt-px">
        <div className="relative z-10 py-12 px-6">
          <div className="max-w-4xl mx-auto text-center">
            
            {/* Background elements */}
            <div className="absolute inset-0 opacity-10">
              <div className="absolute top-1/4 left-1/6 w-32 h-32 bg-gradient-to-br from-yellow-500/40 to-orange-500/40 rounded-full blur-3xl animate-pulse"></div>
              <div className="absolute bottom-1/4 right-1/6 w-24 h-24 bg-gradient-to-br from-emerald-500/40 to-green-500/40 rounded-full blur-3xl animate-pulse" style={{ animationDelay: '2s' }}></div>
            </div>

            {/* Section Header */}
            <div className="mb-8 opacity-0 animate-[fadeInUp_1s_ease-out_0.3s_forwards]">
              <h2 className="text-3xl md:text-4xl font-extralight tracking-wide mb-3">
                Share Your Experience
              </h2>
              <p className="text-lg text-white/70 font-light mb-2">
                Tried our flower? Let others know what you think.
              </p>
              <p className="text-white/60 font-light">
                Your review helps the community find their perfect strain.
              </p>
            </div>

            {/* Review Stats */}
            <div className="flex flex-wrap justify-center gap-8 mb-8 opacity-0 animate-[fadeInUp_1s_ease-out_0.5s_forwards]">
              <div className="text-center">
                <div className="text-2xl font-light text-yellow-400">4.9/5</div>
                <div className="text-sm text-white/70">Average Rating</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-light text-emerald-400">1,800+</div>
                <div className="text-sm text-white/70">Reviews</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-light text-blue-400">98%</div>
                <div className="text-sm text-white/70">Recommend</div>
              </div>
            </div>

            {/* CTA Buttons */}
            <div className="flex flex-col sm:flex-row gap-4 justify-center items-center opacity-0 animate-[fadeInUp_1s_ease-out_0.7s_forwards]">
              <button className="group px-8 py-4 bg-gradient-to-r from-yellow-500 to-orange-500 hover:from-yellow-400 hover:to-orange-400 text-black font-medium rounded-lg transition-all duration-300 hover:scale-105 active:scale-95 flex items-center gap-3 shadow-lg hover:shadow-xl">
                <svg className="w-5 h-5 group-hover:rotate-12 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" />
                </svg>
                Write a Review
              </button>
              
              <Link 
                href="/profile"
                className="px-6 py-4 bg-white/10 hover:bg-white/20 border border-white/20 hover:border-white/40 text-white rounded-lg font-light transition-all duration-300 hover:scale-105 flex items-center gap-2"
              >
                <svg className="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
                View My Reviews
              </Link>
            </div>

            {/* Review Benefits */}
            <div className="mt-8 grid md:grid-cols-3 gap-6 opacity-0 animate-[fadeInUp_1s_ease-out_0.9s_forwards]">
              <div className="text-center">
                <div className="w-12 h-12 bg-yellow-500/20 rounded-full flex items-center justify-center mx-auto mb-3">
                  <svg className="w-6 h-6 text-yellow-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
                  </svg>
                </div>
                <h3 className="text-white font-medium mb-2">Earn Rewards</h3>
                <p className="text-white/60 text-sm">Get points for every review you write</p>
              </div>
              
              <div className="text-center">
                <div className="w-12 h-12 bg-emerald-500/20 rounded-full flex items-center justify-center mx-auto mb-3">
                  <svg className="w-6 h-6 text-emerald-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                  </svg>
                </div>
                <h3 className="text-white font-medium mb-2">Help Others</h3>
                <p className="text-white/60 text-sm">Share your experience with the community</p>
              </div>
              
              <div className="text-center">
                <div className="w-12 h-12 bg-blue-500/20 rounded-full flex items-center justify-center mx-auto mb-3">
                  <svg className="w-6 h-6 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                </div>
                <h3 className="text-white font-medium mb-2">Verified Purchase</h3>
                <p className="text-white/60 text-sm">Only real customers can leave reviews</p>
              </div>
            </div>
          </div>
        </div>
      </Section>

      {/* Quick View Modal */}
      {quickViewProduct && (
        <div 
          className="fixed inset-0 z-50 bg-black/70 backdrop-blur-sm flex items-center justify-center p-4"
          onClick={() => setQuickViewProduct(null)}
        >
          <div 
            className="bg-[#3a3a3a] rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto"
            onClick={(e) => e.stopPropagation()}
          >
            <div className="relative">
              <button
                onClick={() => setQuickViewProduct(null)}
                className="absolute top-4 right-4 z-10 w-10 h-10 bg-white/10 hover:bg-white/20 rounded-full flex items-center justify-center transition-colors"
              >
                <X className="w-5 h-5" />
              </button>
              
              <div className="grid md:grid-cols-2 gap-6">
                {/* Image */}
                <div className="relative aspect-square">
                  <Image
                    src={quickViewProduct.image}
                    alt={quickViewProduct.title}
                    fill
                    className="object-cover rounded-t-2xl md:rounded-l-2xl md:rounded-tr-none"
                    sizes="(max-width: 768px) 100vw, 50vw"
                    quality={90}
                  />
                </div>
                
                {/* Info */}
                <div className="p-6 space-y-4">
                  <div>
                    <div className="flex items-center gap-2 mb-2">
                      <span className={`px-3 py-1 rounded-full text-xs font-light tracking-wide ${
                        quickViewProduct.category === 'indica' ? 'bg-purple-500/20 text-purple-300' :
                        quickViewProduct.category === 'sativa' ? 'bg-green-500/20 text-green-300' :
                        'bg-yellow-500/20 text-yellow-300'
                      }`}>
                        {quickViewProduct.category}
                      </span>
                      <span className="text-emerald-400 text-sm font-medium">{quickViewProduct.thc}% THCa</span>
                    </div>
                    
                    <h2 className="text-3xl font-light mb-2">{quickViewProduct.title}</h2>
                    {quickViewProduct.lineage && (
                      <p className="text-white/60">({quickViewProduct.lineage})</p>
                    )}
                  </div>
                  
                  <p className="text-white/80 leading-relaxed">{quickViewProduct.description}</p>
                  
                  {/* Effects */}
                  <div>
                    <h3 className="text-sm font-medium mb-2">Effects</h3>
                    <div className="flex flex-wrap gap-2">
                      {quickViewProduct.vibe === 'relax' && (
                        <>
                          <span className="px-3 py-1 bg-purple-500/20 text-purple-300 rounded-full text-sm">relaxed</span>
                          <span className="px-3 py-1 bg-indigo-500/20 text-indigo-300 rounded-full text-sm">sleepy</span>
                          <span className="px-3 py-1 bg-blue-500/20 text-blue-300 rounded-full text-sm">calm</span>
                        </>
                      )}
                      {quickViewProduct.vibe === 'energize' && (
                        <>
                          <span className="px-3 py-1 bg-green-500/20 text-green-300 rounded-full text-sm">energetic</span>
                          <span className="px-3 py-1 bg-yellow-500/20 text-yellow-300 rounded-full text-sm">focused</span>
                          <span className="px-3 py-1 bg-orange-500/20 text-orange-300 rounded-full text-sm">creative</span>
                        </>
                      )}
                      {quickViewProduct.vibe === 'balance' && (
                        <>
                          <span className="px-3 py-1 bg-emerald-500/20 text-emerald-300 rounded-full text-sm">balanced</span>
                          <span className="px-3 py-1 bg-teal-500/20 text-teal-300 rounded-full text-sm">euphoric</span>
                          <span className="px-3 py-1 bg-cyan-500/20 text-cyan-300 rounded-full text-sm">uplifted</span>
                        </>
                      )}
                    </div>
                  </div>
                  
                  {/* Terpenes */}
                  {quickViewProduct.terpenes && (
                    <div>
                      <h3 className="text-sm font-medium mb-2">Terpenes</h3>
                      <div className="flex flex-wrap gap-2">
                        {quickViewProduct.terpenes.map((terpene, idx) => (
                          <span key={idx} className="px-3 py-1 bg-blue-500/20 text-blue-300 rounded-full text-sm">
                            {terpene}
                          </span>
                        ))}
                      </div>
                    </div>
                  )}
                  
                  {/* Nose */}
                  <div>
                    <h3 className="text-sm font-medium mb-2">Nose Profile</h3>
                    <div className="flex flex-wrap gap-2">
                      {quickViewProduct.nose.map((note, idx) => (
                        <span key={idx} className="px-3 py-1 bg-white/10 rounded-full text-sm">
                          {note}
                        </span>
                      ))}
                    </div>
                  </div>
                  
                  {/* Weight selection */}
                  <div>
                    <h3 className="text-sm font-medium mb-3">Select Weight</h3>
                    <div className="grid grid-cols-5 gap-2">
                      {Object.entries(WEIGHT_PRICING).map(([weight, weightPrice]) => (
                        <button
                          key={weight}
                          onClick={() => handleWeightSelect(quickViewProduct.id, weight)}
                          className={`px-3 py-2 rounded-lg text-sm font-medium transition-all duration-300 ${
                            selectedWeights[quickViewProduct.id] === weight
                              ? 'bg-emerald-500 text-white'
                              : 'bg-white/10 text-white/70 hover:bg-white/20'
                          }`}
                        >
                          {weight}
                        </button>
                      ))}
                    </div>
                  </div>
                  
                  {/* Price */}
                  <div className="pt-4 border-t border-white/10">
                    <div className="flex items-center justify-between mb-4">
                      <div>
                        <div className="text-3xl font-light">
                          ${WEIGHT_PRICING[(selectedWeights[quickViewProduct.id] || '3.5g') as keyof typeof WEIGHT_PRICING]}
                          <span className="text-lg text-white/60 ml-2">
                            /{selectedWeights[quickViewProduct.id] || '3.5g'}
                          </span>
                        </div>
                        <div className="flex items-center gap-1 mt-1">
                          {[...Array(5)].map((_, i) => (
                            <Star key={i} className="w-4 h-4 fill-yellow-400 text-yellow-400" />
                          ))}
                          <span className="text-sm text-white/60 ml-1">(4.9)</span>
                        </div>
                      </div>
                    </div>
                    
                    {/* Actions */}
                    <div className="flex gap-3">
                      <button
                        onClick={(e) => {
                          handleAddToCart(quickViewProduct, e);
                          setQuickViewProduct(null);
                        }}
                        className="flex-1 flex items-center justify-center gap-2 px-6 py-3 bg-emerald-500 hover:bg-emerald-600 rounded-lg transition-all duration-300 font-medium"
                      >
                        <ShoppingCart className="w-5 h-5" />
                        Add to Cart
                      </button>
                      <button
                        onClick={() => handleProductClick(quickViewProduct)}
                        className="flex-1 px-6 py-3 bg-white/10 hover:bg-white/20 rounded-lg transition-all duration-300 font-medium"
                      >
                        View Details
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* We Ship Fire Section */}
      <Section className="relative bg-[#3a3a3a] overflow-hidden -mt-px">
        <div className="relative z-10 py-16 px-8">
          <div className="max-w-4xl mx-auto">
            
            {/* Section Header */}
            <div className="text-center mb-12 opacity-0 animate-[fadeInUp_1s_ease-out_0.3s_forwards]">
              <h2 className="text-4xl md:text-5xl font-extralight tracking-wide mb-4">
                We Ship Fire.
              </h2>
              <p className="text-xl text-white/80 font-light">
                Every strain is judged on impact.
              </p>
              <p className="text-lg text-white/60 font-light mt-2">
                If it doesn't punch, it's gone. No second chances.
              </p>
            </div>

            {/* Content Grid */}
            <div className="grid md:grid-cols-3 gap-8 opacity-0 animate-[fadeInUp_1s_ease-out_0.5s_forwards]">
              {/* Left Column */}
              <div className="space-y-6">
                <div className="group">
                  <div className="flex items-start gap-4">
                    <div className="w-1 h-16 bg-gradient-to-b from-amber-400 to-amber-400/20 rounded-full"></div>
                    <div>
                      <h3 className="text-white/90 font-medium text-lg mb-2">Direct Source Only</h3>
                      <p className="text-white/70 font-light leading-relaxed">
                        No white labels. No brokers. No warehouse swaps.<br />
                        We work direct‚Äîbecause trusting middlemen is how you end up with trash.
                      </p>
                    </div>
                  </div>
                </div>
              </div>

              {/* Middle Column */}
              <div className="space-y-6">
                <div className="group">
                  <div className="flex items-start gap-4">
                    <div className="w-1 h-16 bg-gradient-to-b from-emerald-400 to-emerald-400/20 rounded-full"></div>
                    <div>
                      <h3 className="text-white/90 font-medium text-lg mb-2">If It's Not Indoor, It's Not Even Considered</h3>
                      <p className="text-white/70 font-light leading-relaxed">
                        Outdoor doesn't make the cut‚Äîever.<br />
                        No exceptions. No compromises. No conversation.
                      </p>
                    </div>
                  </div>
                </div>
              </div>

              {/* Right Column */}
              <div className="space-y-6">
                <div className="group">
                  <div className="flex items-start gap-4">
                    <div className="w-1 h-16 bg-gradient-to-b from-blue-400 to-blue-400/20 rounded-full"></div>
                    <div>
                      <h3 className="text-white/90 font-medium text-lg mb-2">We Smoke Everything Before You Do</h3>
                      <p className="text-white/70 font-light leading-relaxed">
                        No guessing. No hype strain bias.<br />
                        If it didn't pass through our lungs, it doesn't pass to the shelf.
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Bottom Statement */}
            <div className="mt-12 text-center opacity-0 animate-[fadeInUp_1s_ease-out_0.7s_forwards]">
              <div className="inline-block">
                <div className="flex items-center gap-4 mb-6">
                  <div className="h-px w-16 bg-gradient-to-r from-transparent to-white/30"></div>
                  <div className="w-2 h-2 bg-emerald-400 rounded-full animate-pulse"></div>
                  <div className="h-px w-16 bg-gradient-to-l from-transparent to-white/30"></div>
                </div>
                <p className="text-xl text-white/85 font-light leading-relaxed">
                  You won't find old weed in shiny bags here.
                </p>
                <p className="text-lg text-emerald-400 font-medium mt-2">
                  You get it fresh, loud, and exactly how we smoke it.
                </p>
              </div>
            </div>

            {/* Visual Elements */}
            <div className="absolute top-1/4 -left-20 w-40 h-40 bg-gradient-to-br from-emerald-500/10 to-emerald-600/10 rounded-full blur-3xl"></div>
            <div className="absolute bottom-1/4 -right-20 w-32 h-32 bg-gradient-to-br from-green-500/10 to-emerald-500/10 rounded-full blur-3xl"></div>
          </div>
        </div>
      </Section>

      {/* Dispensary Standards. Ecom Speed. Section */}
      <Section id="flower-experience-section">
        <div className="relative z-10 py-3 w-full">
          <SectionHeader 
            title="Orders Don't Sit. Neither Do We."
            subtitle="Freshness in Motion."
            delay="0.3s"
          />
        </div>
        
        <div className="grid md:grid-cols-3 gap-6 max-w-5xl mx-auto px-6 pb-6 items-stretch">
          <ExperiencePanel
            title={<>Same-Day <span className="text-blue-500 group-hover:text-blue-400 transition-colors duration-300">Shipouts</span></>}
            description={<>Orders placed by 2PM ship within hours. No batching. No warehouse lag.</>}
            items={[
              "Orders don't batch",
              "Ships within hours"
            ]}
            accentColor="blue"
            delay="200ms"
            animationDirection="left"
          />
          
          <ExperiencePanel
            title={<>Packed Fresh, <span className="text-green-500 group-hover:text-green-400 transition-colors duration-300">Not Pre-Bagged</span></>}
            description={<>We don't pre-pack. Every order is sealed fresh ‚Äî right after it's placed.</>}
            items={[
              "Sealed after order",
              "Never pre-packed"
            ]}
            accentColor="green"
            delay="400ms"
            animationDirection="center"
          />
          
          <ExperiencePanel
            title={<>Local? <span className="text-purple-500 group-hover:text-purple-400 transition-colors duration-300">Even Faster.</span></>}
            description={<>Most local orders drop next day. Many land same day. Zero middle steps.</>}
            items={[
              "Next day drop",
              "Same day possible"
            ]}
            accentColor="purple"
            delay="600ms"
            animationDirection="right"
          />
        </div>
      </Section>

      {/* Animations */}
      <style jsx>{`
        @keyframes fadeInUp {
          from {
            opacity: 0;
            transform: translateY(20px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
        
        @keyframes fadeIn {
          from {
            opacity: 0;
          }
          to {
            opacity: 1;
          }
        }
        
        @keyframes shimmer {
          0% { transform: translateX(-100%); }
          100% { transform: translateX(100%); }
        }
        
        .animate-shimmer {
          animation: shimmer 2s infinite;
        }
        
        .scrollbar-hide {
          -ms-overflow-style: none;
          scrollbar-width: none;
        }
        
        .scrollbar-hide::-webkit-scrollbar {
          display: none;
        }
        
        .line-clamp-2 {
          display: -webkit-box;
          -webkit-line-clamp: 2;
          -webkit-box-orient: vertical;
          overflow: hidden;
        }
      `}</style>
    </div>
  );
}